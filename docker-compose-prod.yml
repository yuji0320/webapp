version: '3'
services:
  prod_app:
    build: ./app
    # restart: always
    # env_file: ./app/env
    ports:
      - "8000:8000"
      - "8100:8100"
    volumes:
      - ./app:/usr/src/app
    environment: 
      - DB_HOST=172.29.0.5
      - DB_NAME=bms_backend
      - DB_USERNAME=root
      - DB_PASSWORD=
      - DB_PORT=3306
    # command: uwsgi --ini uwsgi/uwsgi.ini
    # command: ./manage.py runserver 0.0.0.0:8100
    networks:
      webbapp_network_prod:
        ipv4_address: 172.29.0.2

  prod_app_frontend:
    build: ./app_frontend
    # restart: always
    # env_file: ./app_frontend/.env.prod
    ports:
      - "9000:9000"
      - "9100:9100"
    # tty: true
    volumes:
      - "./app_frontend:/usr/src/app_frontend"
    command: npm run serve
    # command: bash -c "npm run serve && vue ui -p 9100 -H 0.0.0.0"
    networks:
      webbapp_network_prod:
        ipv4_address: 172.29.0.3

  prod_nginx:
    build: ./nginx
    # restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      # - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/production.conf:/etc/nginx/conf.d/production.conf
      - ./nginx/log:/var/log/nginx
      - ./nginx/uwsgi_params:/etc/nginx/uwsgi_params
      - ./app_frontend/dist:/usr/src/app_frontend/dist
      - ./app/static:/usr/src/app/static
    networks:
      webbapp_network_prod:
        ipv4_address: 172.29.0.4

  prod_mysql:
    build: ./mysql
    # restart: always
    volumes:
      - ./mysql/backup:/tmp/backup
      - ./mysql/settings/my.cnf:/etc/mysql/my.cnf
      - ./storage/volume:/var/lib/mysql
    ports:
      - "3306:3306"
    volumes_from:
      - prod_storage
    networks:
      webbapp_network_prod:
        ipv4_address: 172.29.0.5

  prod_storage:
    build: ./storage

networks:
  webbapp_network_prod:
    driver: bridge
    ipam:
     driver: default
     config:
       - subnet: 172.29.0.0/24
