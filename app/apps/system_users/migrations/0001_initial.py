# Generated by Django 2.0.5 on 2018-09-03 18:17

import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('system_master', '0001_initial'),
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(default=None, error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 20 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=20, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created time')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='updated time')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='UserCopmany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='company name')),
                ('postal_code', models.CharField(max_length=20, verbose_name='postal code')),
                ('address', models.TextField(verbose_name='physical address')),
                ('phone', models.CharField(max_length=20, verbose_name='phone number')),
                ('fax', models.CharField(blank=True, max_length=20, verbose_name='fax number')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created time')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='updated time')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='system_master.SystemCountry')),
                ('default_currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='system_master.SystemCurrency')),
            ],
            options={
                'db_table': 'user_company',
            },
        ),
        migrations.CreateModel(
            name='UserStaff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('staff_number', models.IntegerField(verbose_name='staff number')),
                ('full_name', models.CharField(max_length=150, verbose_name='full name')),
                ('ruby', models.CharField(blank=True, max_length=150, verbose_name='ruby')),
                ('mobile', models.CharField(blank=True, max_length=15, verbose_name='mobile number')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('postal_code', models.CharField(blank=True, max_length=20, verbose_name='postal code')),
                ('address', models.TextField(blank=True, verbose_name='home address')),
                ('date_birth', models.DateField(blank=True, null=True, verbose_name='date birth')),
                ('date_joined', models.DateField(blank=True, null=True, verbose_name='date joined')),
                ('date_left', models.DateField(blank=True, null=True, verbose_name='date left')),
                ('is_staff', models.BooleanField(default=True, help_text='Designates whether the user can create login user.', verbose_name='staff status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created time')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='updated time')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='system_users.UserCopmany')),
            ],
            options={
                'verbose_name': 'staff',
                'verbose_name_plural': 'staffs',
                'db_table': 'staff',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='staff',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='system_users.UserStaff'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AlterUniqueTogether(
            name='userstaff',
            unique_together={('company', 'staff_number')},
        ),
    ]
