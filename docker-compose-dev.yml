version: '3'
services:
  dev_app:
    build: ./app
    # restart: always
    env_file: ./app/env
    ports:
      - "8000:8000"
      - "8100:8100"
    volumes:
      - ./app:/usr/src/app
    # command: uwsgi --ini uwsgi/uwsgi.ini
    # command: ./manage.py runserver 0.0.0.0:8100
    networks:
      webbapp_network:
        ipv4_address: 172.28.0.2

  dev_app_frontend:
    build: ./app_frontend
    # restart: always
    ports:
      - "9000:9000"
      # - "9100:9100"
    tty: true
    volumes:
      - "./app_frontend:/usr/src/app_frontend"
    command: npm run serve
    networks:
      webbapp_network:
        ipv4_address: 172.28.0.3

  dev_nginx:
    build: ./nginx
    # restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/development.conf:/etc/nginx/conf.d/development.conf
      - ./nginx/log:/var/log/nginx
      - ./nginx/uwsgi_params:/etc/nginx/uwsgi_params
      - ./app_frontend/dist:/var/www/html
      - ./app/static:/usr/src/app/static
    networks:
      webbapp_network:
        ipv4_address: 172.28.0.4

  dev_mysql:
    build: ./mysql
    # restart: always
    volumes:
      - ./mysql/backup:/tmp/backup
      - ./mysql/settings/my.cnf:/etc/mysql/my.cnf
      - ./storage/volume:/var/lib/mysql
    ports:
      - "3306:3306"
    volumes_from:
      - dev_storage
    networks:
      webbapp_network:
        ipv4_address: 172.28.0.5

  dev_storage:
    build: ./storage

networks:
  webbapp_network:
    driver: bridge
    ipam:
     driver: default
     config:
       - subnet: 172.28.0.0/24
